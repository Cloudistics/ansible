---
# __Test Outline__
#
# __cloudistics__
# create test application
# start app
# stop app
# restart app
# pause app
# resume app
# remove app

- block:

    # ============================================================
    # create test application

    - name: Create application
      cl_app:
        name: "{{ cldstcs_name }}"
        description: "{{ cldstcs_description }}"
        vcpus: "{{ cldstcs_vcpus }}"
        memory: "{{ cldstcs_memory }}"
        template: "{{ cldstcs_template_name }}"
        category: "{{ cldstcs_category_name }}"
        data_center: "{{ cldstcs_data_center_name }}"
        migration_zone: "{{ cldstcs_migration_zone_name }}"
        flash_pool: "{{ cldstcs_flash_pool_name }}"
        vnic_name: "{{ cldstcs_vnic_name }}"
        vnic_type: "{{ cldstcs_vnic_type }}"
        vnic_network: "{{ cldstcs_vnic_network }}"
        tags: "{{ cldstcs_tags }}"
        wait: True
        state: present
      register: create_result

#    - debug: msg="{{ create_result }}"

    - assert:
        that:
          - 'create_result.changed'
          - 'create_result.instance.status == "Shut down"'
          - 'create_result.instance.name == "{{ cldstcs_name }}"'
          - 'create_result.instance.description == "{{ cldstcs_description }}"'
          - 'create_result.instance.vcpus == {{ cldstcs_vcpus }}'
          - 'create_result.instance.memory == {{ cldstcs_memory }}'
          - 'create_result.instance.category_uuid == "{{ cldstcs_category_uuid }}"'
          - 'create_result.instance.datacenter_uuid == "{{ cldstcs_data_center_uuid }}"'
          - 'create_result.instance.flash_pool_uuid == "{{ cldstcs_flash_pool_uuid }}"'
          - 'create_result.instance.migration_zone_uuid == "{{ cldstcs_migration_zone_uuid }}"'


    # ============================================================
    # start application

    - name: Start application
      cl_app_action:
        name: "{{ cldstcs_name }}"
        action: started
        wait: True
        wait_timeout: 300
      register: start_result

    - assert:
        that:
          - 'start_result.changed'
          - 'start_result.completed'
          - 'start_result.status == "Completed"'
          - 'start_result.instance.status == "Running"'


    # ============================================================
    # stop application

    - name: Stop application
      cl_app_action:
        name: "{{ cldstcs_name }}"
        action: stopped
        wait: True
        wait_timeout: 300
      register: stop_result

    - assert:
        that:
          - 'stop_result.changed'
          - 'stop_result.completed'
          - 'stop_result.status == "Completed"'
          - 'stop_result.instance.status == "Shut down"'


    # ============================================================
    # start application

    - name: Start application
      cl_app_action:
        name: "{{ cldstcs_name }}"
        action: started
        wait: True
        wait_timeout: 300
      register: start_result

    - assert:
        that:
          - 'start_result.changed'
          - 'start_result.completed'
          - 'start_result.status == "Completed"'
          - 'start_result.instance.status == "Running"'


#    # ============================================================
#    # pause for 5 minutes to allow the guest agent to be installed
#    - pause:
#        prompt: 'Make sure the guest agent is running before continuing'
#        minutes: 5


#    # ============================================================
#    # restart application
#
#    - name: Restart application
#      cl_app_action:
#        name: "{{ cldstcs_name }}"
#        action: restarted
#        wait: True
#        wait_timeout: 300
#      register: restart_result
#
#    - assert:
#        that:
#          - 'restart_result.changed'
#          - 'restart_result.completed'
#          - 'restart_result.status == "Completed"'
#          - 'restart_result.instance.status == "Running"'


    # ============================================================
    # suspend application

    - name: Suspend application
      cl_app_action:
        name: "{{ cldstcs_name }}"
        action: suspended
        wait: True
        wait_timeout: 300
      register: suspend_result

    - assert:
        that:
          - 'suspend_result.changed'
          - 'suspend_result.completed'
          - 'suspend_result.status == "Completed"'
          - 'suspend_result.instance.status == "Paused"'


    # ============================================================
    # resume application

    - name: Resume application
      cl_app_action:
        name: "{{ cldstcs_name }}"
        action: resumed
        wait: True
        wait_timeout: 300
      register: resume_result

    - assert:
        that:
          - 'resume_result.changed'
          - 'resume_result.completed'
          - 'resume_result.status == "Completed"'
          - 'resume_result.instance.status == "Running"'


  always:

    # ============================================================
    - name: remove the test application completely
      cl_app:
        name: "{{ cldstcs_name }}"
        state: absent
      register: delete_result

    - name: assert the application was removed
      assert:
        that:
          - 'delete_result.changed'
          - 'delete_result.completed'
          - 'delete_result.status == "Completed"'

